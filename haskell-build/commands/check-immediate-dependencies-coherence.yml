description: Check if --enable-test and --enable-benchmark are safe to use
steps:
  - run:
      name: Check immediate dependencies coherence
      command: |

        get_deps() {
          cat ./dist-newstyle/cache/plan.json | jq -r '(."install-plan" | map({(.id): {"name": ."pkg-name", "version": ."pkg-version"}}) | add) as $dict | ."install-plan"[] | . + {"component-type": (."component-name")} | select(."pkg-src"."type" == "local") | select(."component-name" or false) | select(."component-name"|split(":")[0]|startswith("test")|not) | .depends[] | $dict[.] | "\(.name) \(.version)"' | sort -u
        }

        cabal v2-configure
        get_deps > /tmp/normal-deps.txt

        cabal v2-configure --enable-tests --enable-benchmarks
        get_deps > /tmp/enabled-deps.txt

        (diff /tmp/normal-deps.txt /tmp/enabled-deps.txt || true) \
          | (grep "<" || true)                                    \
          | cut -d ' ' -f 2                                       \
          | sort > /tmp/changing-dependencies.txt

        touch .circleci/whitelist-dependencies.txt <(sort .circleci/whitelist-dependencies.txt) \
          | (grep "<" || true)                                    \
          | sort > /tmp/incoherent-dependencies.txt

        echo "Changing dependencies: "
        sed 's|^|  |g' /tmp/changing-dependencies.txt
        echo "Whitelisted dependencies: "
        sed 's|^|  |g' .circleci/whitelist-dependencies.txt
        echo "Incoherent dependencies: "
        sed 's|^|  |g' /tmp/incoherent-dependencies.txt

        if [ "$(cat /tmp/incoherent-dependencies.txt | xargs)" != "" ]; then
          echo "Error: Found incoherent immediate dependencies"
          exit 1
        fi
        echo "export _BUILD_ENABLE_TESTS_FLAG=--enable-tests" >> $BASH_ENV
        echo "export _BUILD_ENABLE_BENCHMARKS_FLAG=--enable-benchmarks" >> $BASH_ENV
        source $BASH_ENV
