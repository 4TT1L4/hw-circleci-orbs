parameters:
  github-token:
    description: Github OAuth2 token to use when making Github API requests
    type: string
    default: ${GITHUB_TOKEN}
  tag:
    description: |
      Cache tool version (tag name or "latest").  Should be at least v1.0.0.1.
      For list of tags see https://github.com/haskell-works/cabal-cache/tags

    type: string
  uri:
    description: |
      Cabal cache URI.  The location of the cabal-cache binary to download.  This is optional

    type: string
steps:
  - run:
      name: Install binary cache tool (cabal-cache)
      command: |
        if [ "<<parameters.github-token>>" = "" ]; then
          GITHUB_OAUTH_TOKEN_HEADER=""
        else
          echo "Using supplied Github token"
          GITHUB_OAUTH_TOKEN_HEADER="-H 'Authorization: token <<parameters.github-token>>'"
          eval "curl -s $GITHUB_OAUTH_TOKEN_HEADER -X GET https://api.github.com/rate_limit"
        fi

        export PATH="$LOCAL_BIN:$PATH"
        echo "Path: $PATH"
        echo "Local bin: $LOCAL_BIN"
        echo "Listing local bin"
        ls $LOCAL_BIN
        echo "which tar"
        which tar

        if [ "<< parameters.uri >>" = "" ]; then
          if [ "<< parameters.tag >>" = "latest" ]; then
            CACHE_TOOL_TAG=$(eval "curl -s $GITHUB_OAUTH_TOKEN_HEADER -X GET https://api.github.com/repos/haskell-works/cabal-cache/releases/latest" | jq -rc .tag_name)
          else
            CACHE_TOOL_TAG="<< parameters.tag >>"
          fi

          CACHE_TOOL_URI="https://github.com/haskell-works/cabal-cache/releases/download/${CACHE_TOOL_TAG}/cabal-cache_${BUILD_ARCH}_${BUILD_OS_NAME}.tar.gz"
        else
          CACHE_TOOL_URI="<< parameters.uri >>"
        fi

        echo "Downloading: $CACHE_TOOL_URI"
        curl -Ls "$CACHE_TOOL_URI" | tar -xvz -C "$LOCAL_BIN/"
        cabal-cache version
