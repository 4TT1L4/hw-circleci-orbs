description: Capturing build environment (for caching)
parameters:
  cache-version:
    description: Cache version. Update this value when you want to start with new build caches.
    type: string

steps:
  - run:
      name: Capture build environment
      command: |
        mkdir -p ./build

        find . -name "*.cabal" | grep -v 'dist-newstyle/' | sort | xargs grep '^' | grep -v ':version:' | md5sum > ./build/project.summary

        BUILD_GHC_VERSION=$(cat cabal.project | grep 'with-compiler:' | head -n 1 | tr -s ' ' | cut -d' ' -f2 | cut -d'-' -f2)
        if [ "$BUILD_GHC_VERSION" = "" ]; then BUILD_GHC_VERSION=$(ghc -- --numeric-version); fi

        BUILD_ARCH=$(uname -m)

        BUILD_OS_NAME=$(uname -s | tr '[:upper:]' '[:lower:]')

        echo "Build OS: $BUILD_OS_NAME"

        case "$BUILD_OS_NAME" in
          darwin)
            export BUILD_OS_NAME="osx"
            export LOCAL_BIN="/usr/local/bin"
            ;;

          msys_nt-*)
            mkdir -p "$(pwd)/bin"
            cp "/c/Program Files/Git/usr/bin/tar.exe" "$(pwd)/bin/tar.exe"
            export BUILD_OS_NAME="nt"
            export LOCAL_BIN="$(pwd)/bin"
            export PATH="$LOCAL_BIN:$PATH"
            ;;

          *)
            export LOCAL_BIN="/usr/local/bin"
            ;;
        esac

        cat > ./build/build.env <<EOF
        export CACHE_VERSION="<< parameters.cache-version >>"
        export BUILD_GHC_VERSION="$BUILD_GHC_VERSION"
        export BUILD_ARCH="$BUILD_ARCH"
        export BUILD_OS_NAME="$BUILD_OS_NAME"
        export LOCAL_BIN="$LOCAL_BIN"
        export PATH="$PATH"
        EOF
        
        cat ./build/build.env >> $BASH_ENV
        cat ./build/build.env
